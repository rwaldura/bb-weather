#Docs: http://elinux.org/Beagleboard:U-boot_partitioning_layout_2.0

uname_r=4.19.94-ti-r57
#uuid=
#dtb=

###U-Boot Overlays###
###Documentation: http://elinux.org/Beagleboard:BeagleBoneBlack_Debian#U-Boot_Overlays
###Master Enable
enable_uboot_overlays=1
###
###Overide capes with eeprom
uboot_overlay_addr0=/lib/firmware/BB-BONE-WL1835MOD-00A0.dtbo
#uboot_overlay_addr1=/lib/firmware/<file1>.dtbo
#uboot_overlay_addr2=/lib/firmware/<file2>.dtbo
#uboot_overlay_addr3=/lib/firmware/<file3>.dtbo
###
###Additional custom capes
uboot_overlay_addr4=/lib/firmware/BB-I2C2-00A0.dtbo
uboot_overlay_addr5=/lib/firmware/BB-UART5-00A0.dtbo
uboot_overlay_addr6=/lib/firmware/BB-I2C2-BME280.dtbo
#uboot_overlay_addr7=
###
###Custom Cape
#dtb_overlay=/lib/firmware/<file8>.dtbo
###
###Disable auto loading of virtual capes (emmc/video/wireless/adc)
disable_uboot_overlay_emmc=1
disable_uboot_overlay_video=1
disable_uboot_overlay_audio=1
disable_uboot_overlay_wireless=1
#disable_uboot_overlay_adc=1
###
###PRUSS OPTIONS
###pru_rproc (4.14.x-ti kernel)
#uboot_overlay_pru=/lib/firmware/AM335X-PRU-RPROC-4-14-TI-00A0.dtbo
###pru_rproc (4.19.x-ti kernel)
#uboot_overlay_pru=/lib/firmware/AM335X-PRU-RPROC-4-19-TI-00A0.dtbo
###pru_uio (4.14.x-ti, 4.19.x-ti & mainline/bone kernel)
#uboot_overlay_pru=/lib/firmware/AM335X-PRU-UIO-00A0.dtbo
###
###Cape Universal Enable
enable_uboot_cape_universal=1
###
###Debug: disable uboot autoload of Cape
#disable_uboot_overlay_addr0=1
#disable_uboot_overlay_addr1=1
#disable_uboot_overlay_addr2=1
#disable_uboot_overlay_addr3=1
###
###U-Boot fdt tweaks... (60000 = 384KB)
#uboot_fdt_buffer=0x60000
###U-Boot Overlays###

cmdline=coherent_pool=1M net.ifnames=0 lpj=1990656 rng_core.default_quality=100

#In the event of edid real failures, uncomment this next line:
#cmdline=coherent_pool=1M net.ifnames=0 lpj=1990656 rng_core.default_quality=100 quiet video=HDMI-A-1:1024x768@60e

##enable Generic eMMC Flasher:
##make sure, these tools are installed: dosfstools rsync
#cmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh

# disable IPv6, not useful on my tiny network;
# auto-reboot on panic (e.g. filesystem errors)
# and auto-repair them when they occur
optargs=ipv6.disable=1 fsck.repair=yes panic=10

# rwaldura 2020-08-05
#
# By default, the ÂµSD card is at /dev/mmcblk0. In fact, at the start 
# of the boot process, it is: that's how U-Boot loads this very file.
#
# For a reason I do not understand, /dev/mmcblk0 becomes /dev/mmcblk1 after
# loading the WL1835MOD overlay. The root filesystem is no longer where
# U-Boot originally found it, and the boot fails: root FS is not found.
# I have to "fix up" (i.e. hack) the boot process to identify its
# "new" location, /dev/mmcblk1p1. 
# There are probably better ways to fix this...
#
# Unfortunate side-effect: a successful boot now depends on the presence of
# a WL1835MOD cape, and its overlay being loaded. (Otherwise we have "fixed
# up" things for nothing, and the boot fails to find a root FS.)

# awful hak: override the "root" variable definition
args_mmc_old=setenv bootargs console=${console} ${optargs} ${cape_disable} ${cape_enable} ${cape_uboot} root=${awfulhak_root} ro rootfstype=${mmcrootfstype} ${uboot_detected_capes} ${cmdline}

awfulhak_root=/dev/mmcblk1p1

